resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
}
}
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
}
subdata
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
}
subdata
View(morphology)
View(morphology)
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:8]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
}
subdata$AmpR
subdata
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
}
subdata$CazR
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
list(j) = resist
j = j +1
}
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results(j) = resist
j = j +1
}
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results[j] = resist
j = j +1
}
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print( morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results[[j]] = resist
j = j +1
}
results[[1]]
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print("Computing" + morph)
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results[[j]] = resist
j = j +1
}
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
print("Computing") + morph
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results[[j]] = resist
j = j +1
}
# Functions
draw.samples <- function(dt, size){
store = c(1:1000)
for(i in 1:1000){
a <- sample(dt,size,replace=FALSE) # Draw samples of a given size
b <- max(a) #are any of them resistant?
store[i] <- b
proportion <- mean(store) #what proportion of those 1000 draws are resistant?
}
return(proportion)
}
# Import Data
morphology <- as.data.frame(read.csv(file.choose()))
# Identify Available Morphologies
mrhs <- names(table(morphology$Morph))
# Specify How Many Samples We Might Draw
szs <- c(1, 2, 3, 4, 5)
# Create Storage for Results
results <- list()
# Subset by morphology
j = 1 # Helpful counter
for(morph in mrhs[1:7]){
subdata <- morphology[morphology$Morph == morph, ]
resist <- data.frame(AmpR=c(0),CazR=c(0),ChlR=c(0),CipR=c(0),KanR=c(0),StrR=c(0),SulR=c(0),TetR=c(0),TriR=c(0))
for(k in szs){
resist[k,1] = draw.samples(subdata$AmpR,k)
resist[k,2] = draw.samples(subdata$CazR,k)
resist[k,3] = draw.samples(subdata$ChlR,k)
resist[k,4] = draw.samples(subdata$CipR,k)
resist[k,5] = draw.samples(subdata$KanR,k)
resist[k,6] = draw.samples(subdata$StrR,k)
resist[k,7] = draw.samples(subdata$SulR,k)
resist[k,8] = draw.samples(subdata$TetR,k)
resist[k,9] = draw.samples(subdata$TriR,k)
}
results[[j]] = resist
j = j +1
}
Reviews <- read.csv("~/Desktop/Reviews.csv")
View(Reviews)
library(survival)
a <- Surv(Reviews$Time)
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(a)
plot(fit1)
a <- Surv(Reviews$Time)
fit1 <- survfit(a)
fit1 <- survfit(Surv(Reviews$Time) ~ x)
fit1 <- survfit(Surv(Reviews$Time) ~ )
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1)
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ Reviews$Outcome)
plot(fit1)
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1)
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1,lwd=c(3,8,10))
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1,lwd=c(3,1,10),col=c("Red","Grey","Grey"))
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1,lwd=c(3,1,1),col=c("Red","Grey","Grey"))
library(survival)
a <- Surv(Reviews$Time)
fit1 <- survfit(Surv(Reviews$Time) ~ 1)
plot(fit1,lwd=c(5,2,2),col=c("Red","Grey","Grey"))
sum(dbinom(46:54, 100, 0.5))
(4/6)*(1/6)
sum(dbinom(3:12, 12, 0.111))
sum(dbinom(3:12, 12, 0.111))
sum(dbinom(3:12, 3, 0.111))
sum(dbinom(3:12, 300, 0.111))
sum(dbinom(46:54, 100, 0.5))
sum(dbinom(46:54, 100, 0.5))
sum(dbinom(50:100, 100, 0.5))
sum(dbinom(50:100, 100, 0.5))
a <- dbinom(0:100,100,0.5)
plot(a)
b <- sum(dbinom(50:100, 100, 0.5))
plot(b)
b <- dbinom(50:100, 100, 0.5)
plot(b)
b <- dbinom(50:99, 100, 0.5)
sum(b)
plot(b)
b <- dbinom(51:99, 100, 0.5)
sum(b)
a
pbinom(4, size=12, prob=0.2)
pbinom(6, size=12, prob=0.5)
pbinom(5, size=12, prob=0.5)
pbinom(12, size=12, prob=0.5)
(4/6)*(2/6)
pbinom(2, size=12, prob=0.22)
bike3 <- 1-(pbinom(2, size=12, prob=0.22))
bike3 <- 1-(pbinom(2, size=12, prob=0.22))
bike4 <- 1-(pbinom(2, size=16, prob=0.22))
bike5 <- 1-(pbinom(2, size=20, prob=0.22))
bike6 <- 1-(pbinom(2, size=24, prob=0.22))
bike7 <- 1-(pbinom(2, size=28, prob=0.22))
bikes <- c(3,4,5,6,7)
rhinoprob <- c(0.511, 0.717,0.849,0.924,0.963)
plot(bikes,rhinoprob)
plot(bikes,rhinoprob,type="l")
plot(bikes,rhinoprob,type="l",xlab="Windrider Squad Size","Probability of 3+ Glancing or Penetrating Hits")
plot(bikes,rhinoprob,type="l",xlab="Windrider Squad Size",ylab="Probability of 3+ Glancing or Penetrating Hits")
barplot(rhinoprob, main="Car Distribution", horiz=TRUE)
barplot(rhinoprob, main="Car Distribution", horiz=FALSE)
barplot(rhinoprob, main="Car Distribution", horiz=FALSE,ylim=(0,1))
barplot(rhinoprob, main="Car Distribution", horiz=FALSE)
barplot(rhinoprob, main="Car Distribution", horiz=FALSE)
barplot(rhinoprob, main="Car Distribution", horiz=FALSE)
barplot(rhinoprob, main="Car Distribution", horiz=FALSE,names.arg=c("3","4","5","6","7"))
barplot(rhinoprob, main="Probability of 3+ HPs Removed", horiz=FALSE,names.arg=c("3","4","5","6","7"))
barplot(rhinoprob, main="Probability of 3+ HPs Removed", horiz=FALSE,names.arg=c("3","4","5","6","7"),xlab="Probability",ylab="Windrider Squad Size")
barplot(rhinoprob, main="Probability of 3+ HPs Removed", horiz=FALSE,names.arg=c("3","4","5","6","7"),ylab="Probability",xlab="Windrider Squad Size")
barplot(rhinoprob, main="Probability of 3+ HPs Removed", horiz=FALSE,names.arg=c("3","4","5","6","7"),ylab="Probability",xlab="Windrider Squad Size",ylim=c(0,1))
(4/6)*(5/6)*(2/6)
bike3m <- 1-(pbinom(4, size=12, prob=0.185))
bike4m <- 1-(pbinom(4, size=16, prob=0.185))
bike5m <- 1-(pbinom(4, size=20, prob=0.185))
bike6m <- 1-(pbinom(4, size=24, prob=0.185))
bike7m <- 1-(pbinom(4, size=28, prob=0.185))
bikes <- c(3,4,5,6,7)
rhinoprob <- c(0.05, 0.159,0.306,0.465,0.611)
plot(bikes,rhinoprob,type="l",xlab="Windrider Squad Size",ylab="Probability of 3+ Glancing or Penetrating Hits")
barplot(rhinoprob, main="Probability of 3+ HPs Removed", horiz=FALSE,names.arg=c("3","4","5","6","7"),ylab="Probability",xlab="Windrider Squad Size",ylim=c(0,1))
barplot(rhinoprob, main="Probability of 5+ Unsaved Wounds", horiz=FALSE,names.arg=c("3","4","5","6","7"),ylab="Probability",xlab="Windrider Squad Size",ylim=c(0,1))
setwd("~/Documents/Code/VHBlog/LVO")
setwd("~/Documents/Code/VHBlog/LVO17")
setwd("~/Documents/Code/VHBlog/LVO17")
library(readr)
library(Amelia)
library(snow)
library(sandwich)
library(lmtest)
library(reshape)
LVO <- read_csv("~/Documents/Code/VHBlog/LVO17/LVO_2017.csv", col_types = cols(ITC = col_double(),LVO16 = col_integer()))
#Remove Names
LVO$FN <- NULL
LVO$LN <- NULL
LVO$Faction <- as.factor(LVO$Faction)
counts <- table(LVO$Faction)
counts
9+30+21+9+42+15
126/391
9+30+21+9+15+7+6+42+15
154/391
